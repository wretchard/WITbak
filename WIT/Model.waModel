<?xml version="1.0" encoding="UTF-8"?><EntityModelCatalog>

<extraProperties ____objectunic="true" version="1">

	<classes ____objectunic="true">

		<Agency ____objectunic="true" panelColor="#548DD4">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="332" Y="54"/>
</panel>
</Agency>

		<Fee ____objectunic="true" panelColor="#BFBFBF">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="26" Y="396"/>
</panel>
</Fee>

		<Invoice ____objectunic="true" panelColor="#E5B9B7">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="107" Y="88"/>
</panel>
</Invoice>

		<Where ____objectunic="true" panelColor="#E5B9B7">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="103" Y="99"/>
</panel>
</Where>

		<User ____objectunic="true" panelColor="#76923C">

			<panel ____objectunic="true" isOpen="true" pathVisible="true">

				<position ____objectunic="true" X="10" Y="50"/>
</panel>
</User>

		<Speaker ____objectunic="true" panelColor="#CCC1D9">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="51" Y="5"/>
</panel>
</Speaker>

		<TalentCategory ____objectunic="true" panelColor="#C3D69B">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="120" Y="67"/>
</panel>
</TalentCategory>

		<Representation ____objectunic="true" panelColor="#eee">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="91" Y="28"/>
</panel>
</Representation>

		<Pricing ____objectunic="true" panelColor="#70CCC2">

			<panel ____objectunic="true" pathVisible="true" isOpen="false">

				<position ____objectunic="true" X="532" Y="45"/>
</panel>
</Pricing>

		<AgencyPublic ____objectunic="true" panelColor="#C3D69B">

			<panel ____objectunic="true" isOpen="false">

				<position ____objectunic="true" X="96" Y="27"/>
</panel>
</AgencyPublic>

		<AgencyReadOnly ____objectunic="true" panelColor="#C3D69B">

			<panel ____objectunic="true" isOpen="false">

				<position ____objectunic="true" X="81" Y="119"/>
</panel>
</AgencyReadOnly>

		<SpeakerReadOnly ____objectunic="true" panelColor="#D8D8D8">

			<panel ____objectunic="true" isOpen="false" pathVisible="true">

				<position ____objectunic="true" X="290" Y="54"/>
</panel>
</SpeakerReadOnly>
</classes>

	<model ____objectunic="true" workspaceLeft="0" workspaceTop="0"/>
</extraProperties>

<dataClasses name="Agency" className="Agency" collectionName="Agencies" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="agencyName" kind="storage" scope="public" type="string" indexKind="auto"/>

	<attributes name="agencyEmail" kind="storage" scope="public" type="string" indexKind="auto"/>

	<attributes name="invoices" kind="relatedEntities" scope="public" type="Invoices" reversePath="true" path="agent"/>

	<attributes name="users" kind="relatedEntities" scope="public" type="Users" reversePath="true" path="agency"/>

	<attributes name="HA1Key" kind="storage" scope="public" type="string"/>

	<attributes name="password" kind="calculated" scope="public" type="string" scriptKind="javascript">

		<onGet from="guidedModel.Agency.password.onGet"/>

		<onSet from="guidedModel.Agency.password.onSet"/>

	</attributes>

	<attributes name="firstName" kind="storage" scope="public" type="string"/>

	<attributes name="lastName" kind="storage" scope="public" type="string"/>

	<attributes name="fullName" kind="storage" scope="public" type="string"/>

	<attributes name="logo" kind="storage" scope="public" type="image"/>

	<attributes name="url" kind="storage" scope="public" type="string"/>

	<attributes name="description" kind="storage" scope="public" type="string"/>

	<attributes name="plan" kind="relatedEntity" scope="public" type="Pricing" path="Pricing"/>

	<attributes name="login" kind="storage" scope="public" type="string"/>

	<attributes name="ad" kind="relatedEntity" scope="public" type="Representation" path="Representation"/>

	<attributes name="talentCategories" kind="relatedEntities" scope="public" type="TalentCategories" reversePath="true" path="agency"/>

	<methods name="changePassword" applyTo="dataClass" scope="publicOnServer" from="guidedModel.Agency.methods.changePassword"/>

	<methods name="newAgent" applyTo="dataClass" scope="public" from="guidedModel.Agency.methods.newAgent"/>

	<methods name="validatePassword" applyTo="entity" scope="publicOnServer" from="guidedModel.Agency.entityMethods.validatePassword"/>

	<key name="ID"/>

</dataClasses>

<dataClasses name="AgencyPublic" className="AgencyPublic" collectionName="AgencyPublicCollection" scope="public" extends="Agency">

	<events kind="onRestrictingQuery" from="guidedModel.AgencyPublic.events.onRestrictingQuery"/>

</dataClasses>

<dataClasses name="AgencyReadOnly" className="AgencyReadOnly" collectionName="AgencyReadOnlyCollection" scope="public" extends="Agency">

	<attributes name="representations" kind="relatedEntities" scope="public" type="Representations" reversePath="true" path="agencyReadOnly"/>

</dataClasses>

<dataClasses name="Fee" className="Fee" collectionName="Fees" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="fee" kind="storage" scope="public" type="string"/>

	<attributes name="activity" kind="storage" scope="public" type="string"/>

	<attributes name="hours" kind="storage" scope="public" type="number"/>

	<attributes name="fixedExpenses" kind="storage" scope="public" type="number"/>

	<key name="ID"/>

</dataClasses>

<dataClasses name="Invoice" className="Invoice" collectionName="Invoices" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="agent" kind="relatedEntity" scope="public" type="Agency" path="Agency"/>

	<attributes name="itemDescripton" kind="storage" scope="public" type="string"/>

	<attributes name="quantity" kind="storage" scope="public" type="number"/>

	<attributes name="price" kind="storage" scope="public" type="number"/>

	<attributes name="subTotal" kind="storage" scope="public" type="number"/>

	<key name="ID"/>

</dataClasses>

<dataClasses name="Pricing" className="Pricing" collectionName="PricingCollection" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="label" kind="storage" scope="public" type="string"/>

	<attributes name="value" kind="storage" scope="public" type="number"/>

	<key name="ID"/>

</dataClasses>

<dataClasses name="Representation" className="Representation" collectionName="Representations" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="category" kind="storage" scope="public" type="string"/>

	<attributes name="suggestedFee" kind="storage" scope="public" type="number"/>

	<attributes name="talentAskingFee" kind="storage" scope="public" type="number"/>

	<attributes name="applicationDate" kind="storage" scope="public" type="date" simpleDate="false"/>

	<attributes name="agencyReadOnly" kind="relatedEntity" scope="public" type="AgencyReadOnly" path="AgencyReadOnly"/>

	<attributes name="speakerReadOnly" kind="relatedEntity" scope="public" type="SpeakerReadOnly" path="SpeakerReadOnly"/>

	<attributes name="accepted" kind="storage" scope="public" type="bool"/>

	<attributes name="unitMeasure" kind="storage" scope="public" type="string"/>

	<attributes name="agencyName" kind="alias" scope="public" type="string" path="agencyReadOnly.agencyName"/>

	<attributes name="agencyID" kind="alias" scope="public" type="uuid" path="agencyReadOnly.ID"/>

	<attributes name="speakerID" kind="alias" scope="public" type="uuid" path="speakerReadOnly.ID"/>

	<key name="ID"/>

</dataClasses>

<dataClasses name="TalentCategory" className="TalentCategory" collectionName="TalentCategories" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="category" kind="storage" scope="public" type="string"/>

	<attributes name="fullDescription" kind="storage" scope="public" type="string"/>

	<attributes name="suggestedFee" kind="storage" scope="public" type="number"/>

	<attributes name="unitMeasure" kind="storage" scope="public" type="string"/>

	<attributes name="agency" kind="relatedEntity" scope="public" type="Agency" path="Agency"/>

	<attributes name="agencyName" kind="alias" scope="public" type="string" path="agency.agencyName"/>

	<key name="ID"/>

</dataClasses>

<dataClasses name="User" className="User" collectionName="Users" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree" primKey="true"/>

	<attributes name="login" kind="storage" scope="public" type="string"/>

	<attributes name="HA1Key" kind="storage" scope="public" type="string"/>

	<attributes name="password" kind="calculated" scope="public" type="string" scriptKind="javascript">

		<onGet from="guidedModel.User.password.onGet"/>

		<onSet from="guidedModel.User.password.onSet"/>

	</attributes>

	<attributes name="firstName" kind="storage" scope="public" type="string"/>

	<attributes name="lastName" kind="storage" scope="public" type="string"/>

	<attributes name="fullName" kind="calculated" scope="public" type="string" scriptKind="javascript">

		<onGet from="guidedModel.User.fullName.onGet"/>

	</attributes>

	<attributes name="url" kind="storage" scope="public" type="string"/>

	<attributes name="category" kind="storage" scope="public" type="string"/>

	<attributes name="agency" kind="relatedEntity" scope="public" type="Agency" path="Agency"/>

	<attributes name="applyTo" kind="storage" scope="public" type="string"/>

	<attributes name="sessionFee" kind="storage" scope="public" type="string"/>

	<attributes name="selfDescription" kind="storage" scope="public" type="string"/>

	<attributes name="owner" kind="storage" scope="public" type="uuid"/>

	<attributes name="eMail" kind="storage" scope="public" type="string"/>

	<attributes name="role" kind="storage" scope="public" type="string"/>

	<attributes name="companyName" kind="storage" scope="public" type="string"/>

	<attributes name="picture" kind="storage" scope="public" type="image"/>

	<methods name="changePassword" applyTo="dataClass" scope="publicOnServer" from="guidedModel.User.methods.changePassword"/>

	<methods name="newUser" applyTo="dataClass" scope="public" from="guidedModel.User.methods.newUser"/>

	<methods name="validatePassword" applyTo="entity" scope="publicOnServer" from="guidedModel.User.entityMethods.validatePassword"/>

</dataClasses>

<dataClasses name="Speaker" className="Speaker" collectionName="SpeakerCollection" scope="public" extends="User">

	<attributes name="HA1Key" kind="storage" scope="public" type="string"/>

	<attributes name="eMail" kind="storage" scope="public" type="string"/>

	<attributes name="whereAbouts" kind="relatedEntities" scope="public" type="WhereAbouts" reversePath="true" path="speaker"/>

	<events kind="onRestrictingQuery" from="guidedModel.Speaker.events.onRestrictingQuery"/>

	<methods name="addAgency" applyTo="entity" scope="public" from="guidedModel.Speaker.entityMethods.addAgency"/>

	<methods name="getWhereObj" applyTo="dataClass" scope="public" from="guidedModel.Speaker.methods.getWhereObj"/>

</dataClasses>

<dataClasses name="SpeakerReadOnly" className="SpeakerReadOnly" collectionName="SpeakerReadOnlyCollection" scope="public" extends="User">

	<attributes name="representations" kind="relatedEntities" scope="public" type="Representations" reversePath="true" path="speakerReadOnly"/>

</dataClasses>

<dataClasses name="Where" className="Where" collectionName="WhereAbouts" scope="public">

	<attributes name="ID" kind="storage" scope="public" unique="true" autogenerate="true" type="uuid" indexKind="btree"/>

	<attributes name="address" kind="storage" scope="public" type="string" indexKind="auto"/>

	<attributes name="fromWhen" kind="storage" scope="public" type="date" simpleDate="false" indexKind="auto"/>

	<attributes name="toWhen" kind="storage" scope="public" type="date" simpleDate="false" indexKind="auto"/>

	<attributes name="street" kind="storage" scope="public" type="string" indexKind="auto"/>

	<attributes name="city" kind="storage" scope="public" type="string"/>

	<attributes name="country" kind="storage" scope="public" type="string"/>

	<attributes name="speaker" kind="relatedEntity" scope="public" type="Speaker" path="Speaker"/>

	<attributes name="agentName" kind="storage" scope="public" type="string"/>

	<attributes name="agentEmail" kind="storage" scope="public" type="string"/>

	<attributes name="category" kind="storage" scope="public" type="string" indexKind="auto"/>

	<attributes name="fee_per_unit" kind="storage" scope="public" type="string"/>

	<attributes name="descripton" kind="storage" scope="public" type="string"/>

	<attributes name="speakerURL" kind="storage" scope="public" type="string"/>

	<attributes name="agencyURL" kind="storage" scope="public" type="string"/>

	<attributes name="speakerName" kind="storage" scope="public" type="string"/>

	<attributes name="speakerDescription" kind="storage" scope="public" type="string"/>

	<methods name="getCities" applyTo="dataClass" scope="public" from="guidedModel.Where.methods.getCities"/>

	<key name="ID"/>

</dataClasses>
</EntityModelCatalog>